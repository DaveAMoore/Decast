# This file is a template, and might need editing before it works on your project.
# use the official gcc image, based on debian
# can use verions as well, like gcc:5.2
# see https://hub.docker.com/_/gcc/
image: gcc

build:
  stage: build
  # instead of calling g++ directly you can also use some build toolkit like make
  # install the necessary build tools when needed
  # before_script: 
  #   - apt update && apt -y install make autoconf 
  
  before_script:
    - apt-get update
    - apt-get install -y git cmake g++ gcovr
  
  script: 
    - cd Hardware/remote_core/remote_core/
    - mkdir build
    - cd build
    - cmake ../.
    - make remote_core_unit_tests
    - cd bin
  # artifacts:
  #  paths:
  #    - mybinary
  # depending on your build setup it's most likely a good idea to cache outputs to reduce the build time
  # cache:
  #   paths:
  #     - "*.o"

# run tests using the binary built before
test:
  stage: test
  script:
    - ./remote_core_unit_tests
